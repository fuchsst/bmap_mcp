version: '3.8'

services:
  bmad-mcp-server:
    build: .
    container_name: bmad-mcp-server
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - BMAD_LOG_LEVEL=${BMAD_LOG_LEVEL:-INFO}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    command: ["python", "-m", "bmad_mcp_server.main", "--mode", "sse", "--host", "0.0.0.0"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bmad-mcp-stdio:
    build: .
    container_name: bmad-mcp-stdio
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - BMAD_LOG_LEVEL=${BMAD_LOG_LEVEL:-INFO}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    stdin_open: true
    tty: true
    command: ["python", "-m", "bmad_mcp_server.main", "--mode", "stdio"]
    restart: unless-stopped
